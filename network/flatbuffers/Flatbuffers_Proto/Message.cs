// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Flatbuffers_Proto
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Message : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Message GetRootAsMessage(ByteBuffer _bb) { return GetRootAsMessage(_bb, new Message()); }
  public static Message GetRootAsMessage(ByteBuffer _bb, Message obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Message __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Seq { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Msg { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMsgBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetMsgBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetMsgArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<Flatbuffers_Proto.Message> CreateMessage(FlatBufferBuilder builder,
      int seq = 0,
      StringOffset msgOffset = default(StringOffset)) {
    builder.StartTable(2);
    Message.AddMsg(builder, msgOffset);
    Message.AddSeq(builder, seq);
    return Message.EndMessage(builder);
  }

  public static void StartMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddSeq(FlatBufferBuilder builder, int seq) { builder.AddInt(0, seq, 0); }
  public static void AddMsg(FlatBufferBuilder builder, StringOffset msgOffset) { builder.AddOffset(1, msgOffset.Value, 0); }
  public static Offset<Flatbuffers_Proto.Message> EndMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Flatbuffers_Proto.Message>(o);
  }
  public static void FinishMessageBuffer(FlatBufferBuilder builder, Offset<Flatbuffers_Proto.Message> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedMessageBuffer(FlatBufferBuilder builder, Offset<Flatbuffers_Proto.Message> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
